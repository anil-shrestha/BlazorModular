@inject IModulesService modulesService
<Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="modulesService.ModuleAssemblies">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
        <FocusOnNavigate RouteData="@routeData" Selector="h1" />
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
    <Navigating>
        <p>Loading the page...</p>
    </Navigating>
</Router>
@code {
    private List<Assembly> assemblies = new List<Assembly>();
    private async Task OnNavigateAsync(NavigationContext context)
    {
        
        @* var loader = new AssemblyLoader(@$"{Environment.CurrentDirectory}\Modules").LoadFromAssemblyName(new AssemblyName($"Modular.HrModule")); *@
        var assembly = new AssemblyLoader(@$"{Environment.CurrentDirectory}\Modules\Modular.HrModule.dll").LoadFromAssemblyName(new AssemblyName($"Modular.HrModule"));
        assemblies.Add(assembly);
       // if()
        //Console.WriteLine(context.Path.Split('/').First());   
            @* var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "YamlDotNet.dll" });
            lazyLoadedAssemblies.AddRange(assemblies); *@
        //}
        await Task.CompletedTask;
    }
}
